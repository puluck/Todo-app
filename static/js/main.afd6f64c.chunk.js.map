{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todos","text","todo","setTodos","className","completed","onClick","map","item","id","e","filter","TodoList","status","todoItem","Form","props","value","inputText","onChange","setInputText","target","type","preventDefault","Math","random","setStatus","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afd6f64c.chunk.js","sourcesContent":["import React from 'react';\r\nexport const Todo = ({todos,text,todo,setTodos})=>{\r\n    const handleDelete=(e)=>{\r\n              setTodos(todos.filter((item)=>item.id!==todo.id))\r\n    }\r\n\r\n    const handleComplete =()=>{\r\n        setTodos(todos.map((item)=>\r\n        {\r\n            if(item.id===todo.id) {return {...item,completed:!item.completed}}\r\n            return item;\r\n        }\r\n       ))\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"todo\">\r\n        <li className={`todo-item ${todo.completed?\"completed\":\"\"}`} >{text}</li>\r\n        <button onClick={handleComplete} className=\"complete-btn\"><i className=\"fas fa-check\" ></i></button>\r\n        <button onClick={handleDelete} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button> \r\n        </div>\r\n    );\r\n}","import {Todo} from './Todo';\r\n\r\nexport const TodoList = ({todos,setTodos,status})=>{\r\n\r\n    \r\n    return (\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n           {todos.map(todoItem=> {\r\n           \r\n                                    if(status==='all')\r\n                                    {\r\n                                      return <Todo key={todoItem.id} todos={todos} \r\n                                      todo={todoItem} text={todoItem.text} \r\n                                      setTodos={setTodos}\r\n                                      />;\r\n                                    }\r\n                                    else if (status==='completed')\r\n                                    {\r\n                                        if (todoItem.completed===true)\r\n                                        {return <Todo key={todoItem.id} todos={todos} \r\n                                        todo={todoItem} text={todoItem.text} \r\n                                        setTodos={setTodos}\r\n                                        />;  }\r\n                                        else{\r\n                                            return; \r\n                                        }\r\n                                    }\r\n                                    else if (status==='pending')\r\n                                    {\r\n                                        if (todoItem.completed===false)\r\n                                        {return <Todo key={todoItem.id} todos={todos} \r\n                                        todo={todoItem} text={todoItem.text} \r\n                                        setTodos={setTodos}\r\n                                        />;  }\r\n                                        else{\r\n                                            return; \r\n                                        }\r\n                                    }\r\n                            \r\n                            \r\n                                  }\r\n                     )\r\n            } \r\n        </ul>\r\n      </div>\r\n\r\n    );\r\n}","import { TodoList } from \"./TodoList\";\r\n\r\nexport const Form = (props)=>{  // OR export const Form = ({setInputText}) =>{ and so on\r\n\r\n    const handleInputText = (e) =>{\r\n            props.setInputText(e.target.value);\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault(); //prevents refresh of page on every submit\r\n        props.setTodos([...props.todos, {text:props.inputText, completed:false, id:Math.random()*1000 } ]);\r\n        props.setInputText('');\r\n    }\r\n\r\n    const handleStatus=(e)=>{\r\n        props.setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form>\r\n        <input value={props.inputText} onChange={handleInputText} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={handleSubmit} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={handleStatus} className=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"pending\">Pending</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n\r\n    );\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {Form} from './components/Form';\nimport {TodoList} from './components/TodoList';\n\nfunction App() {\n  \n  const [inputText, setInputText]=useState('');\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState('all');\n\n  return (\n    <div className=\"App\">\n     <header>\n       <h1>Puluck's To Do List</h1>\n     </header>\n    <Form inputText={inputText} setInputText={setInputText} todos={todos} setTodos={setTodos}\n          setStatus={setStatus}\n    />  \n    <TodoList todos={todos} setTodos={setTodos} status={status}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}